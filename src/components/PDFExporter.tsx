
import React, { useState } from 'react';
import { Card } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { FileText, Download, Check, ArrowLeft } from 'lucide-react';
import { useToast } from '@/hooks/use-toast';
import { Transaction, TaxSummary } from '@/types/transaction';

interface PDFExporterProps {
  taxSummary: TaxSummary;
  transactions: Transaction[];
  walletAddress: string;
}

export const PDFExporter: React.FC<PDFExporterProps> = ({ taxSummary, transactions, walletAddress }) => {
  const [isGenerating, setIsGenerating] = useState(false);
  const [isComplete, setIsComplete] = useState(false);
  const { toast } = useToast();

  const generatePDF = async () => {
    setIsGenerating(true);
    
    // Simulate PDF generation
    setTimeout(() => {
      setIsGenerating(false);
      setIsComplete(true);
      
      // Create and trigger download of a mock PDF file
      const pdfContent = generatePDFContent();
      const blob = new Blob([pdfContent], { type: 'text/plain' });
      const url = URL.createObjectURL(blob);
      const a = document.createElement('a');
      a.href = url;
      a.download = `Solana_Tax_Report_2024_${walletAddress.slice(0, 8)}.txt`;
      document.body.appendChild(a);
      a.click();
      document.body.removeChild(a);
      URL.revokeObjectURL(url);
      
      toast({
        title: "Tax Report Generated",
        description: "Your PDF report has been downloaded successfully.",
      });
    }, 3000);
  };

  const generatePDFContent = () => {
    return `
SOLANA TAX REPORT 2024
Generated on: ${new Date().toLocaleDateString()}
Wallet Address: ${walletAddress}

=== TAX SUMMARY ===
Total Capital Gains: $${taxSummary.totalGains.toFixed(2)}
Total Capital Losses: $${taxSummary.totalLosses.toFixed(2)}
Net Capital Result: $${taxSummary.netGains.toFixed(2)}

Short-term Gains: $${taxSummary.shortTermGains.toFixed(2)}
Long-term Gains: $${taxSummary.longTermGains.toFixed(2)}
Staking Income: $${taxSummary.stakingIncome.toFixed(2)}

Total Transactions: ${taxSummary.totalTransactions}

=== TRANSACTION DETAILS ===
${transactions.map(tx => `
Date: ${tx.timestamp.toLocaleDateString()}
Type: ${tx.type.toUpperCase()}
Direction: ${tx.direction.toUpperCase()}
Amount: ${tx.amount} ${tx.token}
Price: $${(tx.price || 0).toFixed(2)}
Value: $${((tx.amount * (tx.price || 0))).toFixed(2)}
Classification: ${tx.classification.toUpperCase()}
Signature: ${tx.signature}
`).join('\n')}

=== DISCLAIMER ===
This report is generated for informational purposes only. 
Please consult with a qualified tax professional for tax advice.
The calculations are based on FIFO cost basis method and US tax rules.

Generated by Solana Tax Report Generator
`;
  };

  if (isComplete) {
    return (
      <div className="min-h-screen bg-black">
        <div className="container mx-auto px-6 py-12">
          <Card className="max-w-2xl mx-auto bg-card border-border">
            <div className="p-8 text-center">
              <div className="w-16 h-16 bg-emerald-500/20 rounded-full flex items-center justify-center mx-auto mb-6">
                <Check className="w-8 h-8 text-emerald-400" />
              </div>
              <h2 className="text-3xl font-sans font-bold text-white mb-4">Report Generated Successfully!</h2>
              <p className="text-muted-foreground mb-8">
                Your comprehensive Solana tax report has been generated and downloaded to your device.
              </p>
              
              <div className="space-y-4 mb-8">
                <div className="p-4 bg-primary/10 border border-primary/20 rounded-lg text-left">
                  <h3 className="text-primary font-medium mb-2">What's Included:</h3>
                  <ul className="text-muted-foreground text-sm space-y-1">
                    <li>• Complete transaction history with classifications</li>
                    <li>• Capital gains/losses calculations using FIFO method</li>
                    <li>• Short-term vs long-term capital gains breakdown</li>
                    <li>• Staking income summary</li>
                    <li>• IRS-compliant formatting</li>
                  </ul>
                </div>
                
                <div className="p-4 bg-yellow-500/10 border border-yellow-500/20 rounded-lg text-left">
                  <h3 className="text-yellow-400 font-medium mb-2">Next Steps:</h3>
                  <ul className="text-muted-foreground text-sm space-y-1">
                    <li>• Review the report with your tax professional</li>
                    <li>• Use the data to complete your tax forms</li>
                    <li>• Keep the report for your tax records</li>
                    <li>• Consider quarterly estimated payments if needed</li>
                  </ul>
                </div>
              </div>

              <div className="flex flex-col sm:flex-row gap-4 justify-center">
                <Button 
                  onClick={generatePDF}
                  className="bg-primary hover:bg-primary/90 text-primary-foreground"
                >
                  <Download className="w-4 h-4 mr-2" />
                  Download Again
                </Button>
                <Button 
                  onClick={() => window.location.reload()}
                  variant="outline"
                  className="border-border text-foreground hover:bg-muted"
                >
                  <ArrowLeft className="w-4 h-4 mr-2" />
                  Generate New Report
                </Button>
              </div>
            </div>
          </Card>
        </div>
      </div>
    );
  }

  return (
    <div className="min-h-screen bg-black">
      <div className="container mx-auto px-6 py-12">
        <Card className="max-w-2xl mx-auto bg-card border-border">
          <div className="p-8">
            <div className="text-center mb-8">
              <div className="w-16 h-16 bg-primary/20 rounded-2xl flex items-center justify-center mx-auto mb-4">
                <FileText className="w-8 h-8 text-primary" />
              </div>
              <h2 className="text-3xl font-sans font-bold text-white mb-2">Generate PDF Tax Report</h2>
              <p className="text-muted-foreground">
                Create your professional tax report ready for filing with the IRS
              </p>
            </div>

            {/* Report Preview */}
            <div className="bg-muted/20 rounded-lg p-6 mb-8 border border-border">
              <h3 className="text-white font-semibold mb-4">Report Contents:</h3>
              <div className="grid grid-cols-2 gap-4 text-sm">
                <div className="space-y-2">
                  <div className="flex justify-between">
                    <span className="text-muted-foreground">Total Gains:</span>
                    <span className="text-emerald-400">${taxSummary.totalGains.toFixed(2)}</span>
                  </div>
                  <div className="flex justify-between">
                    <span className="text-muted-foreground">Total Losses:</span>
                    <span className="text-red-400">${taxSummary.totalLosses.toFixed(2)}</span>
                  </div>
                  <div className="flex justify-between">
                    <span className="text-muted-foreground">Net Result:</span>
                    <span className={taxSummary.netGains >= 0 ? 'text-emerald-400' : 'text-red-400'}>
                      ${Math.abs(taxSummary.netGains).toFixed(2)}
                    </span>
                  </div>
                </div>
                <div className="space-y-2">
                  <div className="flex justify-between">
                    <span className="text-muted-foreground">Short-term:</span>
                    <span className="text-primary">${taxSummary.shortTermGains.toFixed(2)}</span>
                  </div>
                  <div className="flex justify-between">
                    <span className="text-muted-foreground">Long-term:</span>
                    <span className="text-purple-400">${taxSummary.longTermGains.toFixed(2)}</span>
                  </div>
                  <div className="flex justify-between">
                    <span className="text-muted-foreground">Staking Income:</span>
                    <span className="text-yellow-400">${taxSummary.stakingIncome.toFixed(2)}</span>
                  </div>
                </div>
              </div>
            </div>

            {/* Generate Button */}
            <Button
              onClick={generatePDF}
              disabled={isGenerating}
              className="w-full h-14 bg-primary hover:bg-primary/90 text-primary-foreground font-semibold text-lg"
            >
              {isGenerating ? (
                <>
                  <Download className="w-5 h-5 mr-2 animate-pulse" />
                  Generating PDF Report...
                </>
              ) : (
                <>
                  <FileText className="w-5 h-5 mr-2" />
                  Generate & Download PDF Report
                </>
              )}
            </Button>

            <div className="mt-6 p-4 bg-primary/10 border border-primary/20 rounded-lg">
              <p className="text-primary text-sm text-center">
                <strong>Note:</strong> This report is for informational purposes only. 
                Please consult with a qualified tax professional for tax advice.
              </p>
            </div>
          </div>
        </Card>
      </div>
    </div>
  );
};
